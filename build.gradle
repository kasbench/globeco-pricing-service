plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'application'
	id 'org.flywaydb.flyway' version '9.22.3'
}

group = 'org.kasbench'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	implementation 'org.testcontainers:junit-jupiter'
	implementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// Micrometer and OpenTelemetry for OTLP metrics export
	implementation 'io.micrometer:micrometer-registry-otlp'
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.38.0'
	implementation 'io.micrometer:micrometer-tracing-bridge-otel'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

flyway {
    url = 'jdbc:postgresql://globeco-pricing-service-postgresql:5435/postgres'
    user = 'postgres'
    password = ''
    schemas = ['public']
    locations = ['classpath:db/migration', 'classpath:org/kasbench/globeco_pricing_service/db/migration']
    cleanDisabled = false
}
